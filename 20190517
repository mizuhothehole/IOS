使用下面代码可以删除文件。
let fileManager = FileManager.default
let myDirectory = NSHomeDirectory() + "/Documents/Files"
let fileArray = fileManager.subpaths(atPath:myDirectory)
for fn in fileArray!{
    try! fileManager.removeItem(myDirectory + "/\(fn)")
}

更详细的解释：
https://www.cnblogs.com/hero11223/p/5689074.html

下面几个类可以实现录像
avcapturefileoutput
avcapturesession
avcapturepreview
把第一个类指定到第二个类里
然后用第一个类进行文件存储
.mov格式目测可存

issue：
1.长视频传不上去
2.视频文件夹没任何控制

NSString *tmpDirPath = NSTemporaryDirectory();
这个是tmp文件夹。app关闭之后里面的文件有可能会被删除。
暂时准备使用此文件夹用来暂时存储视频文件。
1.存储之前清空此文件夹下upload目录
2.如果不存在，则建立upload目录
3.写文件到upload目录
4.上传
5.成功与否，等response回来，都清空upload文件夹。

功能类：NSFileManager

下面这个大哥好像很靠谱：
获得文件管理对象，它的主要功能包括文件中写入数据，删除或者复制文件，移动文件，比较两个文件的内容或者测试文件的存在性等
        let manager = FileManager.default
//        创建一个字符串对象，该字符串对象表示文档目录下的一个文件夹
        let baseUrl = NSHomeDirectory() + "/Documents/txtFoldet"
//        使用文件管理对象，判断文件夹是否存在，并把结果储存在常量中
        let exist = manager.fileExists(atPath: baseUrl)
//        如果文件夹不存在，则执行之后的代码
        if !exist
        {
            do{
//                创建指定位置上的文件夹
                try manager.createDirectory(atPath: baseUrl, withIntermediateDirectories: true, attributes: nil)
                print("Succes to create folder")
            }
            catch{
                print("Error to create folder")
            }
        }

--------------------- 
原文：https://blog.csdn.net/weixin_41735943/article/details/81218065 

➡️我前面想传大的视频传不上去。后来看了看报错，发现下面这个报错了：
POST Content-Length of 12867715 bytes exceeds the limit of 8388608 bytes
这个是php的报错。默认最大传送的是8M。所以要改动php.ini
php.ini里面要改动两个地方。
post_max_size以及upload_max_size
我昨天分别改造成了50M大小。发现完全够iPhone上传10s左右的短视频。

😀今天和明天，我可能除了这个功能之外，还需要一个下载的功能。
https://blog.csdn.net/u010427874/article/details/82116725
这个先看看可不可以把文件下载下来。能下载的话说明这个URL是可以用的。

昨天通过alamoxxx的下载 download方法，可以把远程视频下载到本地的temp
文件夹之下。后面就是如何来进行播放了。
avplayer和avkit以及avfoundation可以实现播放功能。这个属于iOS原生的
播放功能了。

https://blog.csdn.net/weixin_42779997/article/details/88221615
这个是用来播放本地视频的。
. Code
Open your View Controller and write this code.

import UIKit
import AVKit
import AVFoundation

class ViewController: UIViewController {

    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        playVideo()
    }

    private func playVideo() {
        guard let path = Bundle.main.path(forResource: "video", ofType:"m4v") else {
            debugPrint("video.m4v not found")
            return
        }
        let player = AVPlayer(url: URL(fileURLWithPath: path))
        let playerController = AVPlayerViewController()
        playerController.player = player
        present(playerController, animated: true) {
            player.play()
        }
    }
}
